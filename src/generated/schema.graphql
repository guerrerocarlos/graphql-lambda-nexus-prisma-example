### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar DateTime

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

type Mutation {
  createOnePost(data: PostCreateInput!): Post!
  createOneUser(data: UserCreateInput!): User!
  deleteOnePost(where: PostWhereUniqueInput!): Post
  deleteOneUser(where: UserWhereUniqueInput!): User
  sendPayment(account: String!, amount: Int!): Payment!
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Payment {
  account: String!
  amount: Int!
  id: String!
}

type Post {
  id: String!
}

input PostCreateInput {
  author: UserCreateNestedManyWithoutPostInput
  id: String
}

input PostCreateNestedOneWithoutAuthorInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutAuthorInput
  create: PostCreateWithoutAuthorInput
}

input PostCreateOrConnectWithoutAuthorInput {
  create: PostCreateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostCreateWithoutAuthorInput {
  id: String
}

input PostWhereInput {
  AND: [PostWhereInput!]
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  author: UserListRelationFilter
  id: StringFilter
}

input PostWhereUniqueInput {
  id: String
}

type Query {
  post(where: PostWhereUniqueInput!): Post
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int, where: PostWhereInput): [Post!]!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, orderBy: [UserOrderByInput!], where: UserWhereInput): [User!]!
}

enum SortOrder {
  asc
  desc
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Subscription {
  usersFeed: User
}

type User {
  email: String!
  id: String!
}

input UserCreateInput {
  Post: PostCreateNestedOneWithoutAuthorInput
  bio: String
  birthDate: DateTime
  email: String!
  id: String
}

input UserCreateManyPostInput {
  bio: String
  birthDate: DateTime
  email: String!
  id: String
}

input UserCreateManyPostInputEnvelope {
  data: [UserCreateManyPostInput!]
  skipDuplicates: Boolean
}

input UserCreateNestedManyWithoutPostInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutPostInput!]
  create: [UserCreateWithoutPostInput!]
  createMany: UserCreateManyPostInputEnvelope
}

input UserCreateOrConnectWithoutPostInput {
  create: UserCreateWithoutPostInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutPostInput {
  bio: String
  birthDate: DateTime
  email: String!
  id: String
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

input UserOrderByInput {
  bio: SortOrder
  birthDate: SortOrder
  email: SortOrder
  id: SortOrder
  postId: SortOrder
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  Post: PostWhereInput
  bio: StringNullableFilter
  birthDate: DateTimeNullableFilter
  email: StringFilter
  id: StringFilter
  postId: StringNullableFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
}
